{
  "name": "reversi-vue",
  "private": true,
  "scripts": {
    "serve": "vue-cli-service serve",
    "build": "vue-cli-service build",
    "lint": "run-p lint:*",
    "lint:vue": "if-ci vue-cli-service lint --no-fix && if-not-ci vue-cli-service lint",
    "lint:prettier": "if-ci run-s 'prettier --list-different' && if-not-ci run-s 'prettier --write'",
    "prettier": "prettier --ignore-path .gitignore '**/*.{html,json,md,s?css,ya?ml}'",
    "test": "if-ci vue-cli-service test:unit --colors --coverage && if-not-ci vue-cli-service test:unit --watch --notify",
    "e2e": "if-ci vue-cli-service test:e2e --headless --config video=false && if-not-ci vue-cli-service test:e2e",
    "lighthouse": "export URL=$(cd dist && ../node_modules/.bin/now -n reversi-vue-staging -t $NOW_TOKEN) && run-s -c \"lighthouse:run $URL\" \"lighthouse:clean $(echo $URL | sed 's/^https:\\/\\///')\"",
    "lighthouse:run": "lighthouse-ci --no-comment --perf=96 --pwa=100 --a11y=100 --bp=100 --seo=100",
    "lighthouse:clean": "now rm -y -t $NOW_TOKEN"
  },
  "dependencies": {
    "register-service-worker": "^1.5.2",
    "reversi": "^3.0.0",
    "vue": "^2.5.21",
    "vue-router": "^3.0.1",
    "vuex": "^3.0.1"
  },
  "devDependencies": {
    "@cypress/webpack-preprocessor": "^4.0.3",
    "@vue/cli-plugin-babel": "^3.3.0",
    "@vue/cli-plugin-e2e-cypress": "^3.3.0",
    "@vue/cli-plugin-eslint": "^3.3.0",
    "@vue/cli-plugin-pwa": "^3.3.0",
    "@vue/cli-plugin-unit-jest": "^3.3.0",
    "@vue/cli-service": "^3.3.0",
    "@vue/eslint-config-airbnb": "^4.0.0",
    "@vue/eslint-config-prettier": "^4.0.1",
    "@vue/test-utils": "^1.0.0-beta.20",
    "babel-core": "7.0.0-bridge.0",
    "babel-eslint": "^10.0.1",
    "babel-jest": "^23.6.0",
    "codecov": "^3.1.0",
    "cross-env": "^5.2.0",
    "eslint": "^5.8.0",
    "eslint-config-jsdoc-strict": "^2.0.0",
    "eslint-plugin-eslint-comments": "^3.0.1",
    "eslint-plugin-jest": "^22.1.3",
    "eslint-plugin-jsdoc": "^4.0.0",
    "eslint-plugin-more": "^0.3.2",
    "eslint-plugin-strict-vue": "^1.0.0",
    "eslint-plugin-unicorn": "^7.0.0",
    "eslint-plugin-vue": "vuejs/eslint-plugin-vue",
    "html-webpack-inline-source-plugin": "^0.0.10",
    "husky": "^1.3.1",
    "if-ci": "^3.0.0",
    "jest-extended": "^0.11.0",
    "lighthouse-ci": "ebidel/lighthouse-ci",
    "lint-staged": "^8.1.0",
    "node-sass": "^4.9.0",
    "now": "^13.1.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.15.3",
    "sass-loader": "^7.0.1",
    "vue-template-compiler": "^2.5.21",
    "webpack-fix-style-only-entries": "^0.1.0"
  },
  "lint-staged": {
    "*.{html,json,md,s?css,ya?ml}": [
      "prettier --list-different"
    ],
    "*.{js,vue}": [
      "vue-cli-service lint --no-fix",
      "vue-cli-service test:unit --bail --findRelatedTests"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "cross-env CI=true lint-staged"
    }
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "node": true
    },
    "extends": [
      "plugin:vue/recommended",
      "@vue/airbnb",
      "@vue/prettier",
      "plugin:more/recommended",
      "plugin:unicorn/recommended",
      "plugin:jest/recommended",
      "plugin:jest/style",
      "jsdoc-strict",
      "plugin:eslint-comments/recommended"
    ],
    "plugins": [
      "more",
      "strict-vue"
    ],
    "rules": {
      "vue/array-bracket-spacing": "error",
      "vue/component-name-in-template-casing": "error",
      "vue/eqeqeq": "error",
      "vue/key-spacing": "error",
      "vue/match-component-file-name": "error",
      "vue/no-restricted-syntax": "error",
      "vue/object-curly-spacing": [
        "error",
        "always",
        {
          "objectsInObjects": false
        }
      ],
      "vue/require-direct-export": "error",
      "vue/script-indent": "error",
      "vue/space-infix-ops": "error",
      "vue/space-unary-ops": "error",
      "strict-vue/require-jsdoc": "error",
      "strict-vue/no-root-store-calls": "error",
      "strict-vue/no-root-store-assets": "error"
    },
    "overrides": [
      {
        "files": "**/*.vue",
        "rules": {
          "unicorn/filename-case": [
            "error",
            {
              "case": "pascalCase"
            }
          ]
        }
      },
      {
        "files": "tests/unit/{components,views}/*.{spec,test}.js",
        "rules": {
          "unicorn/filename-case": "off"
        }
      },
      {
        "files": "tests/unit/**/*.{spec,test}.js",
        "rules": {
          "jest/consistent-test-it": "error",
          "jest/expect-expect": "error",
          "jest/lowercase-name": [
            "error",
            {
              "ignore": [
                "describe",
                "test"
              ]
            }
          ],
          "jest/no-hooks": "error",
          "jest/no-large-snapshots": "error",
          "jest/no-test-callback": "error",
          "jest/no-test-return-statement": "error",
          "jest/no-truthy-falsy": "error",
          "jest/prefer-expect-assertions": "off",
          "jest/prefer-inline-snapshots": "off",
          "jest/prefer-spy-on": "error",
          "jest/prefer-strict-equal": "error",
          "jest/require-tothrow-message": "error"
        }
      }
    ],
    "parserOptions": {
      "parser": "babel-eslint"
    }
  },
  "prettier": {
    "singleQuote": true,
    "trailingComma": "all"
  },
  "postcss": {
    "plugins": {
      "autoprefixer": {}
    }
  },
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "not ie <= 8"
  ],
  "jest": {
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json",
      "vue"
    ],
    "transform": {
      "^.+\\.vue$": "vue-jest",
      ".+\\.(css|styl|less|sass|scss|svg|png|jpg|ttf|woff|woff2)$": "jest-transform-stub",
      "^.+\\.jsx?$": "babel-jest"
    },
    "moduleNameMapper": {
      "^@/(.*)$": "<rootDir>/src/$1"
    },
    "setupTestFrameworkScriptFile": "jest-extended",
    "snapshotSerializers": [
      "jest-serializer-vue"
    ],
    "testMatch": [
      "**/tests/unit/**/*.spec.(js|jsx|ts|tsx)|**/__tests__/*.(js|jsx|ts|tsx)"
    ],
    "testURL": "http://localhost/",
    "collectCoverageFrom": [
      "src/**/*.{js,vue}",
      "!src/register-service-worker.js"
    ]
  }
}
